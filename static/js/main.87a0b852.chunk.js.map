{"version":3,"sources":["components/CurrentResourceListItem.tsx","components/AddData.tsx","components/EditModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CurrentResourceListItem","item","deleteSelectedData","openModal","currentResource","body","undefined","title","email","fullName","className","name","username","type","checked","completed","readOnly","style","width","src","url","alt","thumbnailUrl","onClick","id","AddData","addData","titleInputChange","bodyInputChange","titleInput","bodyInput","emailInputChange","nameInputChange","photoUrlInputChange","thumbnailUrlInputChange","checkboxChange","checkbox","userNameInputChange","schema","yup","shape","required","photoUrl","useForm","resolver","yupResolver","register","handleSubmit","errors","FullName","value","placeholder","onChange","ref","message","onSubmit","EditModal","editSelectedData","closeModal","userName","App","useState","apiData","setApiData","setCurrentResource","showModal","setShowModal","editId","setEditId","setTitleInput","setBodyInput","emailInput","setEmailInput","nameInput","setNameInput","photoUrlInput","setPhotoUrlInput","ThumbnailUrlInput","setThumbnailUrlInput","userNameInput","setUserNameInput","setCheckbox","useEffect","fetch","then","res","json","data","handleDeleteSelectedData","method","status","filter","handleOpenModal","handleTitleInputChange","e","target","handleBodyInputChange","handleEmailInputChange","handleNameInputChange","handlePhotoUrlInputChange","handleThumbnailUrlInputChange","handleCheckboxChange","handleUserNameInputChange","rel","href","JSON","stringify","length","headers","catch","err","console","log","map","elementsIndex","findIndex","newArray","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87a0b852.chunk.js","sourcesContent":["import './CurrentResourceListItem.scss'\r\n\r\ninterface CurrentResourceListItemProps {\r\n    item: {\r\n        id: number,\r\n        title: string,\r\n        completed: boolean,\r\n        body: string,\r\n        url: string,\r\n        thumbnailUrl: string,\r\n        email: string,\r\n        name: string,\r\n        username: string\r\n    },\r\n    deleteSelectedData: (id: number) => void,\r\n    openModal: (id: number) => void,\r\n    currentResource: string\r\n}\r\n \r\nconst CurrentResourceListItem: React.FC<CurrentResourceListItemProps> = ({ item, deleteSelectedData, openModal, currentResource }) => {\r\n    \r\n    let body = undefined\r\n    let title = undefined\r\n    let email = undefined\r\n    let fullName = undefined\r\n\r\n    if(currentResource === 'posts' || \r\n        currentResource === 'albums' || \r\n        currentResource === 'photos' ||\r\n        currentResource === 'todos'\r\n    ){\r\n        title = <h4 className=\"list-item__title\">title: {item.title}</h4>\r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'posts'){\r\n        body = <p className=\"list-item__body\">body: {item.body}</p>\r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        email = <p>email: {item.email}</p>\r\n    }\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        fullName = <h3 className=\"list-item__title\">name: {item.name}</h3>\r\n    }\r\n\r\n    return ( \r\n        <li className=\"list-item\">\r\n            <div>\r\n                {title}\r\n                {fullName}\r\n                {currentResource === 'users' && <p className=\"list-item__body\">userName: {item.username} </p>}\r\n                {email}\r\n                {body}\r\n                {currentResource === 'todos' && <input type=\"checkbox\" checked={item.completed} readOnly/>}\r\n                {currentResource === 'photos' && <img style={{width: 150}} src={item.url} alt={item.title}/> }\r\n                {currentResource === 'photos' && <img style={{width: 100}} src={item.thumbnailUrl} alt={item.title} className=\"list-item__thumbnail\"/> }\r\n            </div>\r\n            {currentResource && <div>\r\n                <button onClick={() => openModal(item.id)}>Edit</button>\r\n                <button onClick={() => deleteSelectedData(item.id)}>Delete</button>\r\n            </div>}\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default CurrentResourceListItem;\r\n","import { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport './AddData.scss'\r\n\r\ninterface AddDataProps {\r\n    addData: () => void,\r\n    titleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    bodyInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    currentResource: string,\r\n    emailInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    nameInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    photoUrlInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    thumbnailUrlInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    userNameInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    checkboxChange: () => void,\r\n    checkbox: boolean,\r\n    titleInput: string,\r\n    bodyInput: string,\r\n}\r\n\r\nconst AddData: React.FC<AddDataProps> = ({\r\n    addData, \r\n    titleInputChange,\r\n    bodyInputChange,\r\n    currentResource,\r\n    titleInput,\r\n    bodyInput,\r\n    emailInputChange,\r\n    nameInputChange,\r\n    photoUrlInputChange,\r\n    thumbnailUrlInputChange,\r\n    checkboxChange,\r\n    checkbox,\r\n    userNameInputChange\r\n}) => {\r\n\r\n    let schema = yup.object().shape({})\r\n\r\n    if(currentResource === 'posts') {\r\n        schema = yup.object().shape({\r\n            title: yup.string().required(),\r\n            body: yup.string().required()\r\n        })\r\n    }\r\n\r\n    if(currentResource === 'comments') {\r\n        schema = yup.object().shape({\r\n            name: yup.string().required(),\r\n            email: yup.string().email().required(), \r\n            body: yup.string().required()\r\n        })\r\n    }\r\n\r\n    if(currentResource === 'albums') {\r\n        schema = yup.object().shape({\r\n            title: yup.string().required(),\r\n        })\r\n    }\r\n\r\n    if(currentResource === 'photos') {\r\n        schema = yup.object().shape({\r\n            title: yup.string().required(),\r\n            photoUrl: yup.string().required(),\r\n            thumbnailUrl: yup.string().required()\r\n        })\r\n    }\r\n\r\n    if(currentResource === 'users') {\r\n        schema = yup.object().shape({\r\n            name: yup.string().required(),\r\n            username: yup.string().required(),\r\n            email: yup.string().email().required(), \r\n        })\r\n    }\r\n\r\n    \r\n    \r\n    const {register, handleSubmit, errors} = useForm({\r\n        resolver: yupResolver(schema)\r\n    })\r\n    \r\n\r\n\r\n    let body = undefined\r\n    let title = undefined\r\n    let email = undefined\r\n    let FullName = undefined\r\n\r\n    if(currentResource === 'posts' || \r\n        currentResource === 'albums' || \r\n        currentResource === 'photos' ||\r\n        currentResource === 'todos'\r\n    ){  \r\n        title = \r\n        <div>\r\n        <input className=\"form__input\" name=\"title\" value={titleInput} type=\"text\" placeholder=\"title\" onChange={titleInputChange} ref={register as any}/>\r\n        <span className=\"form__errors\">{errors.title?.message}</span>\r\n        </div>\r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'posts'){\r\n        body =\r\n        <div>\r\n            <input className=\"form__input\" name=\"body\" value={bodyInput} type=\"text\" placeholder=\"body\" onChange={bodyInputChange} ref={register as any}/>\r\n            <span className=\"form__errors\">{errors.body?.message}</span>\r\n        </div> \r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        email = \r\n        <div>\r\n            <input className=\"form__input\" name=\"email\" type=\"email\" placeholder=\"email\" onChange={emailInputChange} ref={register as any}/> \r\n            <span className=\"form__errors\">{errors.email?.message}</span>\r\n        </div>\r\n    }\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        FullName =\r\n        <div>\r\n            <input  className=\"form__input\" name=\"name\" type=\"text\" placeholder=\"name\" onChange={nameInputChange} ref={register as any}/>\r\n            <span className=\"form__errors\">{errors.name?.message}</span>\r\n        </div> \r\n    }\r\n    \r\n    const submitForm = () => {\r\n        addData();\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(submitForm)} className=\"form\">\r\n            {title}\r\n            {body}\r\n            {FullName}\r\n            {currentResource === 'users' && \r\n                <div>\r\n                    <input className=\"form__input\" name=\"username\" type=\"text\" placeholder=\"user name\" onChange={userNameInputChange} ref={register as any}/>\r\n                    <span className=\"form__errors\">{errors.username?.message}</span>\r\n                </div>\r\n            }\r\n            {email}\r\n            {currentResource === 'photos' &&\r\n                <div>\r\n                    <input className=\"form__input\" name=\"photoUrl\" type=\"url\" placeholder=\"photo url\" onChange={photoUrlInputChange} ref={register as any}/>\r\n                    <span className=\"form__errors\">{errors.photoUrl?.message}</span>\r\n                </div> \r\n            }\r\n            {currentResource === 'photos' &&\r\n                <div>\r\n                    <input className=\"form__input\" name=\"thumbnailUrl\" type=\"url\" placeholder=\"thumbnail url\" onChange={thumbnailUrlInputChange} ref={register as any}/> \r\n                    <span className=\"form__errors\">{errors.thumbnailUrl?.message}</span>\r\n                </div> \r\n            }\r\n            {currentResource === 'todos' && <input className=\"form__input\" type=\"checkbox\" checked={checkbox} onChange={checkboxChange} ref={register as any}/>}\r\n            {currentResource && <button className=\"form__button\">Add Data</button>}\r\n        </form> \r\n     );\r\n}\r\n \r\nexport default AddData;\r\n","import './EditModal.scss'\r\n\r\nexport interface EditModalProps {\r\n    editSelectedData: () => void,\r\n    closeModal: () => void,\r\n    titleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    bodyInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    emailInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    nameInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    photoUrlInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    thumbnailUrlInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    userNameInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    checkboxChange: () => void,\r\n    checkbox: boolean,\r\n    currentResource: string,\r\n}\r\n \r\nconst EditModal: React.FC<EditModalProps> = ({ \r\n    editSelectedData,\r\n    closeModal,\r\n    titleInputChange,\r\n    bodyInputChange,\r\n    emailInputChange,\r\n    nameInputChange,\r\n    photoUrlInputChange,\r\n    thumbnailUrlInputChange,\r\n    userNameInputChange,\r\n    checkboxChange,\r\n    checkbox,\r\n    currentResource\r\n }) => {\r\n\r\n    let body = undefined\r\n    let title = undefined\r\n    let email = undefined\r\n    let userName = undefined\r\n\r\n    if(currentResource === 'posts' || \r\n        currentResource === 'albums' || \r\n        currentResource === 'photos' ||\r\n        currentResource === 'todos'\r\n    ){\r\n        title = <input type=\"text\" placeholder=\"title\" onChange={titleInputChange}/>\r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'posts'){\r\n        body = <input type=\"text\" placeholder=\"body\" onChange={bodyInputChange}/>\r\n    }\r\n\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        email = <input type=\"email\" placeholder=\"email\" onChange={emailInputChange}/>\r\n    }\r\n    if(currentResource === 'comments' || currentResource === 'users'){\r\n        userName = <input type=\"text\" placeholder=\"name\" onChange={nameInputChange}/>\r\n    }\r\n\r\n    return ( \r\n        <div className=\"modal\">\r\n            <div className=\"modal__content\">\r\n                <div className=\"modal__header\">\r\n                    <h4 className=\"modal__title\">Edit data</h4>\r\n                </div>\r\n                <form className=\"modal__body\">\r\n                    {title}\r\n                    {body}\r\n                    {userName}\r\n                    {currentResource === 'users' && <input type=\"text\" placeholder=\"user name\" onChange={userNameInputChange} />}\r\n                    {email}\r\n                    {currentResource === 'photos' && <input type=\"url\" placeholder=\"photo url\" onChange={photoUrlInputChange} />}\r\n                    {currentResource === 'photos' && <input type=\"url\" placeholder=\"thumbnail url\" onChange={thumbnailUrlInputChange} /> }\r\n                    {currentResource === 'todos' && <input type=\"checkbox\" checked={checkbox} onChange={checkboxChange}/>}\r\n                </form>\r\n                <div className=\"modal__footer\">\r\n                    <button onClick={() => closeModal()} className=\"modal__button\">Cancel</button>\r\n                    <button onClick={() => editSelectedData()} className=\"modal__button\">Confirm</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default EditModal;","import { useState, useEffect } from 'react'\nimport './App.scss';\nimport CurrentResourceListItem from './components/CurrentResourceListItem';\nimport AddData from './components/AddData';\nimport EditModal from './components/EditModal'\n\nconst App = () => {\n\n  const [apiData, setApiData] = useState([] as any)\n  const [currentResource, setCurrentResource] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [editId, setEditId] = useState(0);\n\n  const [titleInput, setTitleInput] = useState('');\n  const [bodyInput, setBodyInput] = useState('');\n  const [emailInput, setEmailInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [photoUrlInput,setPhotoUrlInput] = useState('');\n  const [ThumbnailUrlInput, setThumbnailUrlInput] = useState('');\n  const [userNameInput, setUserNameInput] = useState('');\n  const [checkbox, setCheckbox] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://jsonplaceholder.typicode.com/${currentResource}/?_limit=100`)\n      .then(res => res.json())\n      .then(data => setApiData(data))\n  }, [currentResource]);\n\n  const handleAddData = () => {\n    currentResource && fetch(`https://jsonplaceholder.typicode.com/${currentResource}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        id: apiData.length + 1,\n        completed: checkbox,\n        title: titleInput,\n        body: bodyInput,\n        email: emailInput,\n        name: nameInput,\n        url: photoUrlInput,\n        thumbnailUrl: ThumbnailUrlInput,\n        username: userNameInput\n      }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    })\n    .then((res) => {\n      if(res.status !== 201){\n        return\n      }\n      return res.json();\n    })\n    .then((data) => {\n      setApiData([data, ...apiData])\n      setTitleInput('');\n      setBodyInput('');\n      setEmailInput('');\n      setNameInput('');\n      setPhotoUrlInput('');\n      setThumbnailUrlInput('');\n      setUserNameInput('');\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  const handleEditSelectedData = () => {\n    fetch(`https://jsonplaceholder.typicode.com/${currentResource}/${editId}`, {\n      method: 'PATCH',\n      body: JSON.stringify({\n        title: titleInput,\n        body: bodyInput,\n        email: emailInput,\n        name: nameInput,\n        url: photoUrlInput,\n        thumbnailUrl: ThumbnailUrlInput,\n        completed: checkbox,\n        username: userNameInput\n      }),\n      headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    })\n    .then((res) => {\n      if (res.status !== 200){\n        return\n      }\n      return res.json()\n    })\n    .then((data) => {\n      const elementsIndex = apiData.findIndex((item: any) => item.id === editId)\n      let newArray = [...apiData]\n      newArray[elementsIndex] = {...newArray[elementsIndex], \n        title: data.title, \n        body: data.body,\n        completed: data.completed,\n        email: data.email,\n        name: data.name,\n        url: data.url,\n        thumbnailUrl: data.thumbnailUrl,\n        username: data.username\n      }\n      setApiData(newArray);\n      setTitleInput('');\n      setBodyInput('');\n      setEmailInput('');\n      setNameInput('');\n      setPhotoUrlInput('');\n      setThumbnailUrlInput('');\n      setUserNameInput('');\n      setShowModal(false);\n    })\n    .catch((err) => {\n      console.log(err)\n    }) \n    \n  }\n\n  const handleDeleteSelectedData = (id: number) => {\n\n    fetch(`https://jsonplaceholder.typicode.com/${currentResource}/${id}`, {\n      method: 'DELETE',\n    })\n    .then((res) => {\n      if (res.status !== 200){\n        return\n      }\n      setApiData(apiData.filter((item: any) => {\n        return item.id !== id;\n      }))\n    })\n  }\n\n  const handleSelectResource = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentResource(e.target.value)\n  }\n\n  const handleOpenModal = (id: number) => {\n    setShowModal(true)\n    setEditId(id)\n  }\n\n  const handleCloseModal = () => {\n    setShowModal(false)\n    setEditId(0)\n  }\n\n  const handleTitleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleInput(e.target.value)\n  }\n\n  const handleBodyInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setBodyInput(e.target.value)\n  }\n  const handleEmailInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmailInput(e.target.value)\n}\n\nconst handleNameInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameInput(e.target.value)\n}\n\nconst handlePhotoUrlInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhotoUrlInput(e.target.value)\n}\n\nconst handleThumbnailUrlInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setThumbnailUrlInput(e.target.value)\n}\n\nconst handleCheckboxChange = () => {\n    setCheckbox(!checkbox)\n}\n\nconst handleUserNameInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  setUserNameInput(e.target.value)\n}\n\n  return (\n    <div className=\"app\">\n      <label className=\"app__label\">Choose a resource:\n        <select className=\"app__select\" onChange={handleSelectResource}>\n          <option value=\"\">--Please choose an option--</option>\n          <option value=\"posts\">/posts</option>\n          <option value=\"comments\">/comments</option>\n          <option value=\"albums\">/albums</option>\n          <option value=\"photos\">/photos</option>\n          <option value=\"todos\">/todos</option>\n          <option value=\"users\">/users</option>\n        </select>\n      </label>\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://jsonplaceholder.typicode.com/${currentResource}`} className=\"app__link\">https://jsonplaceholder.typicode.com/<span>{currentResource}</span></a>\n      <AddData \n        addData={handleAddData} \n        titleInputChange={handleTitleInputChange}\n        bodyInputChange={handleBodyInputChange}\n        titleInput={titleInput}\n        bodyInput={bodyInput}\n        currentResource={currentResource}\n        emailInputChange={handleEmailInputChange}\n        nameInputChange={handleNameInputChange}\n        photoUrlInputChange={handlePhotoUrlInputChange}\n        thumbnailUrlInputChange={handleThumbnailUrlInputChange}\n        userNameInputChange={handleUserNameInputChange}\n        checkboxChange={handleCheckboxChange}\n        checkbox={checkbox}\n      />\n      {currentResource && <ul className=\"app__list\">\n        {apiData.map((item: any) => (\n          <CurrentResourceListItem \n            key={item.id}\n            item={item}\n            deleteSelectedData={handleDeleteSelectedData}\n            openModal={handleOpenModal}\n            currentResource={currentResource} \n          />\n        ))}\n      </ul>}\n      {showModal && <EditModal \n        editSelectedData={handleEditSelectedData}\n        closeModal={handleCloseModal}\n        titleInputChange={handleTitleInputChange}\n        bodyInputChange={handleBodyInputChange}\n        emailInputChange={handleEmailInputChange}\n        nameInputChange={handleNameInputChange}\n        photoUrlInputChange={handlePhotoUrlInputChange}\n        thumbnailUrlInputChange={handleThumbnailUrlInputChange}\n        userNameInputChange={handleUserNameInputChange}\n        checkboxChange={handleCheckboxChange}\n        checkbox={checkbox}\n        currentResource={currentResource}\n      />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}